{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .ingredientsModal {
      display: none; 
  }

  .ingredientsModal.show {
    display: block; 
    position: fixed;
    z-index: 6000;
    width: 100vw;
    height: 100%;
    max-width: 100vw;
    max-height: 100%;
    padding: 0;
    background: none;
    border: 0;
    margin: 0;
    overflow: hidden;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,.2);
  } 

  .modal_content {
  position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    max-width: 600px;
    width: 100%;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;
    padding: 0;
    pointer-events: none;  
  }

  .modal_body {
    overflow-x: hidden;
    overflow-y: auto;
    position: relative;
    background-color: #fff;
    padding: 30px;
    pointer-events: auto;
    max-height: 100%;
    border-radius: 20px;
  }

  .closeX {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 20;
    transition: transform .3s;
    border: 0;
    background: transparent;
    cursor: pointer;
  }

  #buttonModal {
    cursor: pointer;
  } 
{%- endstyle -%}

{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
  if section.settings.color_scheme == section.settings.section_color_scheme and section.settings.content_layout == 'no-overlap'
    assign remove_color_classes = true
  endif
-%}

<div class="section-{{ section.id }}-padding">
  <div class="page-width">
    <div class="gradient color-{{ section.settings.section_color_scheme }} image-with-text image-with-text--{{ section.settings.content_layout }} isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% unless section.settings.color_scheme == section.settings.section_color_scheme and settings.media_border_thickness > 0 and settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0 %} collapse-corners{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <div class="image-with-text__grid grid grid--gapless grid--1-col grid--{% if section.settings.desktop_image_width == 'medium' %}2-col-tablet{% else %}3-col-tablet{% endif %}{% if section.settings.layout == 'text_first' %} image-with-text__grid--reverse{% endif %}">
        <div class="image-with-text__media-item image-with-text__media-item--{{ section.settings.desktop_image_width }} image-with-text__media-item--{{ section.settings.desktop_content_position }} grid__item">
          <div
            class="image-with-text__media image-with-text__media--{{ section.settings.height }} global-media-settings{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}{% if section.settings.image != blank %} media{% else %} image-with-text__media--placeholder placeholder{% endif %}{% if section.settings.image_behavior != 'none' %} animate--{{ section.settings.image_behavior }}{% endif %}"
            {% if section.settings.height == 'adapt' and section.settings.image != blank %}
              style="padding-bottom: {{ 1 | divided_by: section.settings.image.aspect_ratio | times: 100 }}%;"
            {% endif %}
          >
            {%- if section.settings.image != blank -%}
              {%- if section.settings.image_behavior == 'ambient' or section.settings.image_behavior == 'zoom-in' -%}
                {%- assign widths = '198, 432, 642, 900, 1284, 1800' -%}
                {%- capture sizes -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 1.6667 }}px,
              (min-width: 750px) calc((100vw - 130px) / 1.667), calc((100vw - 50px) / 1.667)
            {%- endcapture -%}
              {%- else -%}
                {%- assign widths = '165, 360, 535, 750, 1070, 1500' -%}
                {%- capture sizes -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
              (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
            {%- endcapture -%}
              {%- endif -%}
              {{
                section.settings.image
                | image_url: width: 1500
                | image_tag: sizes: sizes, widths: widths, fetchpriority: fetch_priority
              }}
            {%- else -%}
              {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
            {%- endif -%}
          </div>
        </div>
        <div class="image-with-text__text-item grid__item">
          <div
            id="ImageWithText--{{ section.id }}"
            class="image-with-text__content image-with-text__content--{{ section.settings.desktop_content_position }} image-with-text__content--desktop-{{ section.settings.desktop_content_alignment }} image-with-text__content--mobile-{{ section.settings.mobile_content_alignment }} image-with-text__content--{{ section.settings.height }} content-container{% unless remove_color_classes %} gradient color-{{ section.settings.color_scheme }}{% else %} background-transparent{% endunless %}"
          >
            {%- for block in section.blocks -%}
              {% case block.type %}
                {%- when 'heading' -%}
                  <h2
                    class="image-with-text__heading inline-richtext {{ block.settings.heading_size }}"
                    {{ block.shopify_attributes }}
                  >
                    {{ block.settings.heading }}
                  </h2>
                {%- when 'caption' -%}
                  <p
                    class="image-with-text__text image-with-text__text--caption {{ block.settings.text_style }} {{ block.settings.text_style }}--{{ block.settings.text_size }} {{ block.settings.text_alignment }} {{ block.settings.text_style }}"
                    {{ block.shopify_attributes }}
                  >
                    {{ block.settings.caption | escape }}
                  </p>
                {%- when 'text' -%}
                  <div class="image-with-text__text rte {{ block.settings.text_style }}" {{ block.shopify_attributes }}>
                    {{ block.settings.text }}
                  </div>
                {%- when 'button' -%}
                  {%- if section.settings.use_ingredients -%}
                    {%- assign features_metaobject_references = product.metafields.custom.ingredients_icons -%}
                    {% if features_metaobject_references.value != blank %}
                      <div class="ingredients_section">
                        {%- for metaobject_reference in features_metaobject_references.value -%}
                          {% assign features_metaobject = metaobject_reference | metaobject %}
                          <div class="ingredient_item">
                            {% if features_metaobject and features_metaobject.icon %}
                              <div class="ingredient_item_icon">
                                <img src="{{ features_metaobject.icon | image_url }}"  width="100%" height="auto" alt="{{ features_metaobject.name | escape }}" />
                              </div>
                            {% endif %}
                            <div class="ingredient_item_content">
                                <h3 class="heading-xs">{{ features_metaobject.name | escape }}</h3>                
                              {% if features_metaobject and features_metaobject.content %}
                                {{ features_metaobject.content }}
                              {% endif %}
                            </div>
                          </div>
                        {% endfor %}
                      </div>
                    {% endif %}
                  {%- endif -%}                  
                  {%- if block.settings.button_label != blank -%}
                    <a
                      {% if block.settings.button_link == blank %}
                        role="link" aria-disabled="true"
                      {% else %}
                        {% if section.settings.use_ingredients %} id="buttonModal" {% else %} href="{{ block.settings.button_link }}" {% endif %}
                      {% endif %}
                      class="button{% if block.settings.button_style_secondary %} button--secondary button--bordered{% else %} button--primary{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {{ block.settings.button_label | escape }}
                    </a>

                    {%- if section.settings.use_ingredients -%}
                      <script>
                          document.addEventListener("DOMContentLoaded", function () {
                            window.productMetafields = {
                              ingredients_text: {{ product.metafields.custom.ingredients_text | strip_newlines | replace: '"', '\"' | replace: "\n", "<br>" | json }}
                            };  
                              const openButton = document.getElementById("buttonModal");

                              openButton.addEventListener("click", function () {
                                  // Check if modal already exists
                                  if (!document.querySelector(".ingredientsModal")) {
                                      const modalHTML = `
                                          <div class="ingredientsModal">
                                            <div class="modal_content">
                                              <div class="modal_body">
                                                <button class="closeModal closeX">
                                                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M18 6L6 18" stroke="#2B4676" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                    <path d="M6 6L18 18" stroke="#2B4676" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                                  </svg>
                                                </button>
                                                <h3 class="heading-xs">Ingredients</h3>
                                                <div class="body-lg">${window.productMetafields.ingredients_text || "No ingredients available"}</div>
                                                <button class="closeModal button button--secondary button--bordered">Close</button>
                                              </div>
                                            </div>
                                          </div>
                                      `;

                                      // Inject modal before </body>
                                      document.body.insertAdjacentHTML("beforeend", modalHTML);

                                      const modal = document.querySelector(".ingredientsModal");
                                      const closeButton = modal.querySelector(".closeModal");

                                      // Show the modal
                                      modal.classList.add("show");

                                      // Hide modal on close button click
                                      closeButton.addEventListener("click", function () {
                                          modal.classList.remove("show");
                                      });
                                  } else {
                                      // If modal exists, just show it
                                      document.querySelector(".ingredientsModal").classList.add("show");
                                  }
                              });
                          });
                      </script>
 
                    {%- endif -%} 

                  {%- endif -%}
                {% when 'contact_form' %}
                  {%- form 'contact', id: 'ContactForm', class: contact_form_class -%}
                  {%- if form.posted_successfully? -%}
                    <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
                      {{- 'icon-success.svg' | inline_asset_content -}}
                      {{ 'templates.contact.form.post_success' | t }}
                    </h2>
                  {%- elsif form.errors -%}
                    <div class="form__message">
                      <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
                        {{- 'icon-error.svg' | inline_asset_content -}}
                        {{ 'templates.contact.form.error_heading' | t }}
                      </h2>
                    </div>
                    <ul class="form-status-list caption-large" role="list">
                      <li>
                        <a href="#ContactForm-email" class="link">
                          {{ form.errors.translated_fields.email | capitalize }}
                          {{ form.errors.messages.email }}
                        </a>
                      </li>
                    </ul>
                  {%- endif -%}
                  <div class="contact__fields">
                    <div class="field">
                      <label for="contact_first_name">First Name</label>
                      <input type="text" id="contact_first_name" name="contact[first_name]" placeholder="Your First Name" class="field__input">
                    </div>
                    <div class="field">
                      <label for="contact_last_name">Last Name</label>
                      <input type="text" id="contact_last_name" name="contact[last_name]" placeholder="Your Last Name" class="field__input">
                    </div>
                   </div> 
                    <div class="field field--with-error">
                     <label for="ContactForm-email">Email address</label>
                      <input
                        autocomplete="email"
                        type="email"
                        id="ContactForm-email"
                        class="field__input"
                        name="contact[email]"
                        spellcheck="false"
                        autocapitalize="off"
                        value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
                        aria-required="true"
                        {% if form.errors contains 'email' %}
                          aria-invalid="true"
                          aria-describedby="ContactForm-email-error"
                        {% endif %}
                        placeholder="{{ 'templates.contact.form.email' | t }}">
                      
                      {%- if form.errors contains 'email' -%}
                        <small class="contact__field-error" id="ContactForm-email-error">
                          <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
                          <span class="form__message">
                            <span class="svg-wrapper">
                              {{- 'icon-error.svg' | inline_asset_content -}}
                            </span>
                            {{- form.errors.translated_fields.email | capitalize }}
                            {{ form.errors.messages.email -}}
                          </span>
                        </small>
                      {%- endif -%}
                    </div>
                  
                  <div class="field">
                    <label for="ContactForm-phone">Phone number (optional)</label>
                    <input
                      type="tel"
                      id="ContactForm-phone"
                      class="field__input"
                      autocomplete="tel"
                      name="contact[{{ 'templates.contact.form.phone' | t }}]"
                      pattern="[0-9\-]*"
                      value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
                      placeholder="{{ 'templates.contact.form.phone' | t | default: 'Enter your phone number' }}"
                    >
                  </div>
                  <div class="field">
                    <label for="contact_reason">Enquiry Type</label>
                    <select id="contact_reason" name="contact[reason]" class="field__input field__select">
                      <option value="General Inquiry">General Inquiry</option>
                      <option value="Support">Support</option>
                      <option value="Sales">Sales</option>
                    </select>
                  </div>  
                  <div class="field">
                    <label for="ContactForm-body">Enquiry</label>
                    <textarea
                      rows="10"
                      id="ContactForm-body"
                      class="text-area field__input"
                      name="contact[{{ 'templates.contact.form.comment' | t }}]"
                      placeholder="{{ 'templates.contact.form.comment' | t }}"
                    >
                      {{- form.body -}}
                    </textarea>
                  </div>
                  <div class="contact__button">
                    <button type="submit" class="button">
                      Submit Enquiry
                    </button>
                  </div>
                {%- endform -%}
              {%- endcase -%}
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.image-with-text.name",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.image-with-text.settings.image.label"
    },
    {
      "type": "select",
      "id": "height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.image-with-text.settings.height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.image-with-text.settings.height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.image-with-text.settings.height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.image-with-text.settings.height.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.image-with-text.settings.height.label"
    },
    {
      "type": "select",
      "id": "desktop_image_width",
      "options": [
        {
          "value": "small",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.image-with-text.settings.desktop_image_width.options__3.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.image-with-text.settings.desktop_image_width.label",
      "info": "t:sections.image-with-text.settings.desktop_image_width.info"
    },
    {
      "type": "select",
      "id": "layout",
      "options": [
        {
          "value": "image_first",
          "label": "t:sections.image-with-text.settings.layout.options__1.label"
        },
        {
          "value": "text_first",
          "label": "t:sections.image-with-text.settings.layout.options__2.label"
        }
      ],
      "default": "image_first",
      "label": "t:sections.image-with-text.settings.layout.label",
      "info": "t:sections.image-with-text.settings.layout.info"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "top",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "middle",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "bottom",
          "label": "t:sections.image-with-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "top",
      "label": "t:sections.image-with-text.settings.desktop_content_position.label"
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.image-with-text.settings.desktop_content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.image-with-text.settings.desktop_content_alignment.label"
    },
    {
      "type": "select",
      "id": "content_layout",
      "options": [
        {
          "value": "no-overlap",
          "label": "t:sections.image-with-text.settings.content_layout.options__1.label"
        },
        {
          "value": "overlap",
          "label": "t:sections.image-with-text.settings.content_layout.options__2.label"
        }
      ],
      "default": "no-overlap",
      "label": "t:sections.image-with-text.settings.content_layout.label"
    },
    {
      "type": "color_scheme",
      "id": "section_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.multirow.settings.container_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.animation.content"
    },
    {
      "type": "checkbox",
      "id": "use_ingredients",
      "default": false,
      "label": "Show Ingredients (Product page only)"
    },      
    {
      "type": "select",
      "id": "image_behavior",
      "options": [
        {
          "value": "none",
          "label": "t:sections.all.animation.image_behavior.options__1.label"
        },
        {
          "value": "ambient",
          "label": "t:sections.all.animation.image_behavior.options__2.label"
        },
        {
          "value": "zoom-in",
          "label": "t:sections.all.animation.image_behavior.options__4.label"
        }
      ],
      "default": "none",
      "label": "t:sections.all.animation.image_behavior.label"
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.image-with-text.settings.mobile_content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.image-with-text.settings.mobile_content_alignment.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.image-with-text.blocks.heading.name",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "t:sections.image-with-text.blocks.heading.settings.heading.default",
          "label": "t:sections.image-with-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "hs",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "hm",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "hl",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            },
            {
              "value": "hxxl",
              "label": "t:sections.all.heading_size.options__5.label"
            }
          ],
          "default": "hm",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.image-with-text.blocks.caption.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "t:sections.image-with-text.blocks.caption.settings.text.default",
          "label": "t:sections.image-with-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.image-with-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.image-with-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.image-with-text.blocks.caption.settings.caption_size.label"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "options": [
            {
              "value": "text-left",
              "label": "Left"
            },
            {
              "value": "text-center",
              "label": "Center" 
            },
            {
              "value": "text-right",
              "label": "Right"
            }            
          ],
          "default": "text-left",
          "label": "Left"
        }        
      ]
    },
    {
      "type": "text",
      "name": "t:sections.image-with-text.blocks.text.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.image-with-text.blocks.text.settings.text.default",
          "label": "t:sections.image-with-text.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.image-with-text.blocks.text.settings.text_style.options__2.label"
            }
          ],
          "default": "body",
          "label": "t:sections.image-with-text.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.image-with-text.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "t:sections.image-with-text.blocks.button.settings.button_label.default",
          "label": "t:sections.image-with-text.blocks.button.settings.button_label.label",
          "info": "t:sections.image-with-text.blocks.button.settings.button_label.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.image-with-text.blocks.button.settings.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.image-with-text.blocks.button.settings.outline_button.label"
        }      
      ]
    },
    {
      "type": "contact_form",
      "name": "Contact Form",
      "settings": [] 
    }
  ],
  "presets": [
    {
      "name": "t:sections.image-with-text.presets.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
